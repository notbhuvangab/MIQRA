Metadata-Version: 2.4
Name: maestro-threat-assessment
Version: 1.0.0
Summary: Comprehensive security risk assessment for agentic workflows using MAESTRO framework
Home-page: https://github.com/maestro-security/threat-assessment
Author: MAESTRO Security Team
Author-email: security@maestro.ai
Project-URL: Bug Reports, https://github.com/maestro-security/threat-assessment/issues
Project-URL: Source, https://github.com/maestro-security/threat-assessment
Project-URL: Documentation, https://maestro-security.github.io/threat-assessment/
Keywords: security,risk-assessment,ai,agents,threat-modeling,maestro,cybersecurity
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: Information Technology
Classifier: Topic :: Security
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Requires-Python: >=3.8
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: PyYAML==6.0.1
Requires-Dist: click==8.1.7
Requires-Dist: tabulate==0.9.0
Requires-Dist: colorama==0.4.6
Requires-Dist: flask==3.0.0
Requires-Dist: jinja2==3.1.2
Requires-Dist: matplotlib==3.7.2
Requires-Dist: numpy==1.24.3
Requires-Dist: pandas==2.0.3
Requires-Dist: streamlit==1.29.0
Requires-Dist: plotly==5.17.0
Requires-Dist: streamlit-agraph==0.0.45
Requires-Dist: streamlit-option-menu==0.3.6
Requires-Dist: graphviz==0.20.1
Requires-Dist: pillow==10.1.0
Requires-Dist: requests==2.31.0
Requires-Dist: reportlab==4.0.7
Requires-Dist: seaborn==0.12.2
Requires-Dist: kaleido==0.2.1
Provides-Extra: dev
Requires-Dist: pytest>=7.0; extra == "dev"
Requires-Dist: pytest-cov>=4.0; extra == "dev"
Requires-Dist: black>=22.0; extra == "dev"
Requires-Dist: flake8>=5.0; extra == "dev"
Requires-Dist: mypy>=1.0; extra == "dev"
Provides-Extra: web
Requires-Dist: flask>=3.0.0; extra == "web"
Requires-Dist: gunicorn>=21.0; extra == "web"
Dynamic: author
Dynamic: author-email
Dynamic: classifier
Dynamic: description
Dynamic: description-content-type
Dynamic: home-page
Dynamic: keywords
Dynamic: license-file
Dynamic: project-url
Dynamic: provides-extra
Dynamic: requires-dist
Dynamic: requires-python
Dynamic: summary

# MAESTRO Threat Assessment Framework

A comprehensive security risk assessment tool for agentic workflows using the MAESTRO (Model, Agent framework, Ecosystem, Security, Threat landscape, Risk mitigation, Operational oversight) framework.

## Overview

The MAESTRO Threat Assessment Framework provides enterprise-grade security analysis for AI agentic workflows. It implements the latest MAESTRO security framework with enhanced risk quantification formulas and Monte Carlo uncertainty estimation, including:

- **Workflow Exploitability Index (WEI)** - MAESTRO-layered vulnerability assessment with statistical confidence intervals
- **Risk Propagation Score (RPS)** - Cross-layer risk analysis with uncertainty quantification
- **Monte Carlo Risk Assessment** - Probabilistic analysis with 10,000 simulation runs for robust uncertainty estimation
- **Total Cost of Ownership (TCO)** - Enterprise cost impact evaluation
- **Comprehensive Reporting** - Executive summaries and detailed technical reports with confidence intervals
- **Interactive Web GUI** - Modern web interface with flowchart visualization and uncertainty displays

## Features

### Core Capabilities

- **YAML Workflow Parsing**: Parse and analyze workflow definitions with agent interactions and data flows
- **Vulnerability Identification**: Automatic detection of security risks across all MAESTRO layers
- **Monte Carlo Risk Quantification**: Calculate WEI and RPS scores with statistical uncertainty using 10,000 simulation runs
- **Uncertainty Analysis**: 95% confidence intervals for all risk metrics with robust statistical foundation
- **Cost Assessment**: Enterprise cost estimation with ROI analysis
- **Multiple Output Formats**: CLI, JSON, tables, and executive summaries with uncertainty bounds
- **Interactive Web GUI**: Modern Streamlit-based interface with uncertainty visualization

### üé≤ Monte Carlo Risk Assessment

The framework implements probabilistic risk assessment using Monte Carlo simulation to quantify uncertainty in:

- **Attack Complexity**: Distribution-based estimates of exploitation difficulty
- **Business Impact**: Probabilistic assessment of potential damage
- **Vulnerability Severity**: CVSS-like scoring with confidence intervals  
- **Protocol Coupling**: Inter-component dependency risk estimation
- **Layer Exposure**: MAESTRO layer-specific risk exposure with uncertainty

Each assessment runs 10,000 Monte Carlo simulations to provide:
- Mean risk scores with standard deviations
- 95% confidence intervals for all metrics
- Percentile distributions (5th, 25th, 50th, 75th, 95th)
- Robust statistical foundation for enterprise decision-making

### üåê Web GUI Features

The MAESTRO framework now includes a comprehensive web interface with:

- **üì§ YAML Workflow Upload**: Drag-and-drop or paste workflow definitions
- **üîÑ Interactive Flowchart**: Visualize workflow steps with threat mapping and severity colors
- **‚öôÔ∏è Configurable Risk Parameters**: Customize LayerWeight_l, ExposureIndex_l, VulnerabilityComplexity_l, and EnterpriseCost_l
- **üèóÔ∏è MAESTRO Layer Visualization**: Interactive charts showing WEI/RPS contributions by layer
- **üí∞ Cost Analysis Dashboard**: Visual cost breakdown and ROI analysis
- **üìä Comprehensive Reporting**: Executive summaries with downloadable reports
- **üéØ Threat Mapping**: Color-coded visualization of vulnerabilities by severity

### MAESTRO Framework Layers

1. **L1: Foundation Models** - Model security, prompt injection protection, bias mitigation
2. **L2: Data Operations** - Data pipeline security, privacy protection, vector database hardening
3. **L3: Agent Frameworks** - Agent protocol security, tool validation, inter-agent communication
4. **L4: Deployment** - Runtime security, sandboxing, network isolation, infrastructure hardening
5. **L5: Observability** - Security monitoring, logging, anomaly detection, audit trails
6. **L6: Compliance** - Regulatory compliance, policy enforcement, governance frameworks
7. **L7: Ecosystem** - Third-party integrations, supply chain security, dependency management

## Installation

### Prerequisites

- Python 3.8+
- pip package manager

### Install Dependencies

```bash
pip install -r requirements.txt
```

### Install MAESTRO Package

```bash
pip install -e .
```

## Quick Start

### üåê Web GUI (Recommended)

Launch the interactive web interface:

```bash
python run_gui.py
```

This will start the Streamlit application at `http://localhost:8501` with features including:
- Interactive workflow upload and analysis
- Real-time threat visualization with flowchart
- Configurable risk model parameters (custom button option)
- Comprehensive dashboard with MAESTRO layer analysis
- Export capabilities for reports and summaries

### üìã Command Line Interface

#### 1. Analyze a Workflow (Quick Assessment)

```bash
python -m maestro_threat_assessment.cli.main quick examples/financial_analysis_workflow.yaml
```

#### 2. Full MAESTRO Assessment

```bash
python -m maestro_threat_assessment.cli.main assess examples/financial_analysis_workflow.yaml \
  --enterprise-size medium \
  --industry financial \
  --format summary
```

#### 3. Generate JSON Report

```bash
python -m maestro_threat_assessment.cli.main assess examples/financial_analysis_workflow.yaml \
  --format json \
  --output report.json
```

## Usage Examples

### Command Line Interface

The MAESTRO CLI provides several commands for different use cases:

#### Full Assessment
```bash
maestro assess workflow.yaml --enterprise-size large --industry healthcare --verbose
```

#### Quick Risk Check
```bash
maestro quick workflow.yaml
```

#### View Framework Layers
```bash
maestro layers
```

#### Cost Estimation
```bash
maestro cost-estimate --enterprise-size enterprise --industry financial
```

### Python API

```python
from maestro_threat_assessment import MAESTROEngine

# Initialize engine
engine = MAESTROEngine()

# Perform assessment
report = engine.assess_workflow_from_file(
    'workflow.yaml',
    base_infrastructure_cost=200000,
    enterprise_size='large',
    industry='financial'
)

# Access results with uncertainty
print(f"Risk Level: {report.risk_assessment.risk_level}")
print(f"WEI Score: {report.risk_assessment.total_wei.mean:.3f} ¬± {report.risk_assessment.total_wei.std_dev:.3f}")
print(f"WEI 95% CI: [{report.risk_assessment.total_wei.confidence_interval[0]:.3f}, {report.risk_assessment.total_wei.confidence_interval[1]:.3f}]")
print(f"RPS Score: {report.risk_assessment.total_rps.mean:.3f} ¬± {report.risk_assessment.total_rps.std_dev:.3f}")
print(f"TCO: ${report.cost_assessment.total_tco:,.0f}")
```

## Workflow Format

MAESTRO accepts YAML workflow definitions with the following structure:

```yaml
workflow:
  name: "Your Workflow Name"
  description: "Description of the workflow"
  metadata:
    version: "1.0"
    category: "financial"  # financial, healthcare, etc.
    sensitivity: "high"    # low, medium, high
  
  steps:
    - id: "step_1"
      agent: "AgentName"
      action: "action_name"
      params:
        key: "value"
      dependencies: []
    
    - id: "step_2"
      agent: "AnotherAgent"
      action: "process_data"
      input_from: "AgentName"
      dependencies: ["step_1"]
```

## Risk Assessment Output

### Executive Summary
- Workflow overview and metrics
- Overall risk level (Low/Medium/High/Critical)
- WEI and RPS scores
- Cost impact analysis
- Key findings and vulnerabilities

### Detailed Analysis
- Layer-by-layer vulnerability breakdown
- Risk propagation analysis
- Cost breakdown by MAESTRO layer
- Specific security recommendations

### Example Output
```
MAESTRO THREAT ASSESSMENT REPORT
================================
Risk Level: HIGH
WEI Score: 6.42
RPS Score: 23.7
Total Vulnerabilities: 8
Security Investment Required: $127,500
ROI: 240%

Top Risks:
1. [HIGH] Data extraction step may expose sensitive information
2. [MEDIUM] Financial workflow may violate regulatory compliance
3. [HIGH] Tool execution may be vulnerable to poisoning attacks
```

## Configuration

### Enterprise Sizes
- `startup`: Small teams, limited budget
- `small`: <500 employees
- `medium`: 500-5000 employees  
- `large`: 5000-50000 employees
- `enterprise`: >50000 employees

### Industries
- `financial`: Banking, investment, fintech
- `healthcare`: Medical, pharma, health tech
- `government`: Public sector, defense
- `technology`: Software, SaaS, tech services
- `retail`: E-commerce, consumer goods
- `manufacturing`: Industrial, automotive

## Architecture

```
maestro_threat_assessment/
‚îú‚îÄ‚îÄ core/
‚îÇ   ‚îú‚îÄ‚îÄ maestro_engine.py       # Main orchestration
‚îÇ   ‚îú‚îÄ‚îÄ workflow_parser.py      # YAML parsing and analysis
‚îÇ   ‚îú‚îÄ‚îÄ risk_calculator.py      # WEI/RPS calculation
‚îÇ   ‚îî‚îÄ‚îÄ cost_estimator.py       # TCO calculation
‚îú‚îÄ‚îÄ models/
‚îÇ   ‚îî‚îÄ‚îÄ maestro_constants.py    # Framework constants
‚îú‚îÄ‚îÄ cli/
‚îÇ   ‚îî‚îÄ‚îÄ main.py                 # Command-line interface
‚îî‚îÄ‚îÄ examples/
    ‚îî‚îÄ‚îÄ *.yaml                  # Example workflows
```

## Advanced Features

### Custom Cost Models
Override default cost estimates with your infrastructure costs:

```bash
maestro assess workflow.yaml --base-cost 500000
```

### Vulnerability Extensions
The framework is designed to be extensible. Add custom vulnerability detection rules by extending the `WorkflowParser` class.

### Integration Ready
- JSON API for integration with existing security tools
- Programmatic access via Python API
- CI/CD pipeline integration capabilities

## Security Considerations

- All assessments are performed locally - no data leaves your environment
- Workflow files should be treated as sensitive configuration
- Cost estimates are based on industry averages and should be validated
- Regular updates recommended as threat landscape evolves

## Contributing

1. Fork the repository
2. Create a feature branch
3. Add tests for new functionality
4. Submit a pull request

## License

Copyright 2024 MAESTRO Security Team. All rights reserved.

## Support

For questions, issues, or feature requests:
- Create an issue in the repository
- Review the examples directory for common use cases
- Check the CLI help: `maestro --help`

---

**Note**: This tool provides risk assessment guidance. Always consult with security professionals for production deployments.

## GUI Usage Guide

### üè† Home Page
- Framework overview and MAESTRO layer descriptions
- Sample YAML format and getting started guide

### üì§ Upload Workflow
- Upload YAML files or paste content directly
- Configure assessment parameters (base cost, enterprise size, industry)
- Run comprehensive MAESTRO assessment

### ‚öôÔ∏è Configure Parameters
The quantitative risk model supports both default and custom parameters:
- **Default Mode**: Uses fixed values based on industry standards
- **Custom Mode**: Allows configuration of:
  - `LayerWeight_l`: Importance weights for each MAESTRO layer
  - `ExposureIndex_l`: Exposure levels by layer
  - `VulnerabilityComplexity_l`: Attack complexity factors
  - `EnterpriseCost_l`: Cost weights for security investments

### üìä Assessment Results
- **Interactive Flowchart**: Nodes colored by vulnerability severity (üî¥ Critical, üü† High, üü° Medium, üü¢ Low)
- **MAESTRO Layer Analysis**: Multi-chart visualization of WEI/RPS contributions
- **Cost Analysis**: Visual breakdown of security investments and ROI
- **Vulnerability Table**: Detailed listing of all identified threats
- **Strategic Recommendations**: Actionable security guidance

### üìÑ Export Reports
- **JSON Reports**: Complete assessment data for integration
- **Executive Summaries**: High-level markdown reports for stakeholders
- **Real-time Metrics**: Current assessment overview with key indicators
